//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestBusinessCheck.BC {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.businesscheck.se/Services/DataImport2", ConfigurationName="BC.DataImport2Soap")]
    public interface DataImport2Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.businesscheck.se/Services/DataImport2/DataImport2Person", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestBusinessCheck.BC.DataImport2Result DataImport2Person(string CustomerLoginName, string UserLoginName, string Password, string Language, string PackageName, string PersonNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.businesscheck.se/Services/DataImport2/DataImport2PersonKopiaInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestBusinessCheck.BC.DataImport2Result DataImport2PersonKopiaInfo(string CustomerLoginName, string UserLoginName, string Password, string Language, string PackageName, string PersonNumber, string CustomerPopularName, string CustomerClientName, string OmfragadEmail, string OmfragadMobileNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.businesscheck.se/Services/DataImport2/DataImport2PersonBroker", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestBusinessCheck.BC.DataImport2Result DataImport2PersonBroker(string CustomerLoginName, string UserLoginName, string Password, string Language, string CallerPersonNumber, string CallerFirstName, string CallerLastName, string CallerOrganizationNumber, string CallerCompanyName, string CallerAddress, string CallerZipCode, string CallerCity, string PackageName, string PersonNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.businesscheck.se/Services/DataImport2/DataImport2PersonBrokerKopiaInfo" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestBusinessCheck.BC.DataImport2Result DataImport2PersonBrokerKopiaInfo(
                    string CustomerLoginName, 
                    string UserLoginName, 
                    string Password, 
                    string Language, 
                    string CallerPersonNumber, 
                    string CallerFirstName, 
                    string CallerLastName, 
                    string CallerOrganizationNumber, 
                    string CallerCompanyName, 
                    string CallerAddress, 
                    string CallerZipCode, 
                    string CallerCity, 
                    string PackageName, 
                    string PersonNumber, 
                    string CustomerPopularName, 
                    string CustomerClientName, 
                    string OmfragadEmail, 
                    string OmfragadMobileNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.businesscheck.se/Services/DataImport2/DataImport2PersonKopia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestBusinessCheck.BC.DataImport2Result DataImport2PersonKopia(string CustomerLoginName, string UserLoginName, string Password, string Language, string CallerPersonNumber, string CallerFirstName, string CallerLastName, string CallerOrganizationNumber, string CallerCompanyName, string CallerAddress, string CallerZipCode, string CallerCity, string PackageName, string PersonNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.businesscheck.se/Services/DataImport2/DataImport2Company", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestBusinessCheck.BC.DataImport2Result DataImport2Company(string CustomerLoginName, string UserLoginName, string Password, string Language, string PackageName, string OrganizationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.businesscheck.se/Services/DataImport2/DataImport2CompanyKopiaInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestBusinessCheck.BC.DataImport2Result DataImport2CompanyKopiaInfo(string CustomerLoginName, string UserLoginName, string Password, string Language, string PackageName, string OrganizationNumber, string CustomerPopularName, string CustomerClientName, string OmfragadEmail, string OmfragadMobileNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.businesscheck.se/Services/DataImport2/DataImport2CompanyBroker", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestBusinessCheck.BC.DataImport2Result DataImport2CompanyBroker(string CustomerLoginName, string UserLoginName, string Password, string Language, string CallerPersonNumber, string CallerFirstName, string CallerLastName, string CallerOrganizationNumber, string CallerCompanyName, string CallerAddress, string CallerZipCode, string CallerCity, string PackageName, string OrganizationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.businesscheck.se/Services/DataImport2/DataImport2CompanyBrokerKopiaInf" +
            "o", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestBusinessCheck.BC.DataImport2Result DataImport2CompanyBrokerKopiaInfo(
                    string CustomerLoginName, 
                    string UserLoginName, 
                    string Password, 
                    string Language, 
                    string CallerPersonNumber, 
                    string CallerFirstName, 
                    string CallerLastName, 
                    string CallerOrganizationNumber, 
                    string CallerCompanyName, 
                    string CallerAddress, 
                    string CallerZipCode, 
                    string CallerCity, 
                    string PackageName, 
                    string OrganizationNumber, 
                    string CustomerPopularName, 
                    string CustomerClientName, 
                    string OmfragadEmail, 
                    string OmfragadMobileNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.businesscheck.se/Services/DataImport2/DataImport2CompanyKopia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestBusinessCheck.BC.DataImport2Result DataImport2CompanyKopia(string CustomerLoginName, string UserLoginName, string Password, string Language, string CallerPersonNumber, string CallerFirstName, string CallerLastName, string CallerOrganizationNumber, string CallerCompanyName, string CallerAddress, string CallerZipCode, string CallerCity, string PackageName, string OrganizationNumber);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.businesscheck.se/Services/DataImport2")]
    public partial class DataImport2Result : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string numberField;
        
        private Block[] blocksField;
        
        private Error errorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
                this.RaisePropertyChanged("Number");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public Block[] Blocks {
            get {
                return this.blocksField;
            }
            set {
                this.blocksField = value;
                this.RaisePropertyChanged("Blocks");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Error Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
                this.RaisePropertyChanged("Error");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.businesscheck.se/Services/DataImport2")]
    public partial class Block : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private int segmentField;
        
        private bool segmentFieldSpecified;
        
        private Field[] fieldsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Segment {
            get {
                return this.segmentField;
            }
            set {
                this.segmentField = value;
                this.RaisePropertyChanged("Segment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SegmentSpecified {
            get {
                return this.segmentFieldSpecified;
            }
            set {
                this.segmentFieldSpecified = value;
                this.RaisePropertyChanged("SegmentSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public Field[] Fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
                this.RaisePropertyChanged("Fields");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.businesscheck.se/Services/DataImport2")]
    public partial class Field : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.businesscheck.se/Services/DataImport2")]
    public partial class Error : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorCodeField;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DataImport2SoapChannel : TestBusinessCheck.BC.DataImport2Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataImport2SoapClient : System.ServiceModel.ClientBase<TestBusinessCheck.BC.DataImport2Soap>, TestBusinessCheck.BC.DataImport2Soap {
        
        public DataImport2SoapClient() {
        }
        
        public DataImport2SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataImport2SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataImport2SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataImport2SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestBusinessCheck.BC.DataImport2Result DataImport2Person(string CustomerLoginName, string UserLoginName, string Password, string Language, string PackageName, string PersonNumber) {
            return base.Channel.DataImport2Person(CustomerLoginName, UserLoginName, Password, Language, PackageName, PersonNumber);
        }
        
        public TestBusinessCheck.BC.DataImport2Result DataImport2PersonKopiaInfo(string CustomerLoginName, string UserLoginName, string Password, string Language, string PackageName, string PersonNumber, string CustomerPopularName, string CustomerClientName, string OmfragadEmail, string OmfragadMobileNumber) {
            return base.Channel.DataImport2PersonKopiaInfo(CustomerLoginName, UserLoginName, Password, Language, PackageName, PersonNumber, CustomerPopularName, CustomerClientName, OmfragadEmail, OmfragadMobileNumber);
        }
        
        public TestBusinessCheck.BC.DataImport2Result DataImport2PersonBroker(string CustomerLoginName, string UserLoginName, string Password, string Language, string CallerPersonNumber, string CallerFirstName, string CallerLastName, string CallerOrganizationNumber, string CallerCompanyName, string CallerAddress, string CallerZipCode, string CallerCity, string PackageName, string PersonNumber) {
            return base.Channel.DataImport2PersonBroker(CustomerLoginName, UserLoginName, Password, Language, CallerPersonNumber, CallerFirstName, CallerLastName, CallerOrganizationNumber, CallerCompanyName, CallerAddress, CallerZipCode, CallerCity, PackageName, PersonNumber);
        }
        
        public TestBusinessCheck.BC.DataImport2Result DataImport2PersonBrokerKopiaInfo(
                    string CustomerLoginName, 
                    string UserLoginName, 
                    string Password, 
                    string Language, 
                    string CallerPersonNumber, 
                    string CallerFirstName, 
                    string CallerLastName, 
                    string CallerOrganizationNumber, 
                    string CallerCompanyName, 
                    string CallerAddress, 
                    string CallerZipCode, 
                    string CallerCity, 
                    string PackageName, 
                    string PersonNumber, 
                    string CustomerPopularName, 
                    string CustomerClientName, 
                    string OmfragadEmail, 
                    string OmfragadMobileNumber) {
            return base.Channel.DataImport2PersonBrokerKopiaInfo(CustomerLoginName, UserLoginName, Password, Language, CallerPersonNumber, CallerFirstName, CallerLastName, CallerOrganizationNumber, CallerCompanyName, CallerAddress, CallerZipCode, CallerCity, PackageName, PersonNumber, CustomerPopularName, CustomerClientName, OmfragadEmail, OmfragadMobileNumber);
        }
        
        public TestBusinessCheck.BC.DataImport2Result DataImport2PersonKopia(string CustomerLoginName, string UserLoginName, string Password, string Language, string CallerPersonNumber, string CallerFirstName, string CallerLastName, string CallerOrganizationNumber, string CallerCompanyName, string CallerAddress, string CallerZipCode, string CallerCity, string PackageName, string PersonNumber) {
            return base.Channel.DataImport2PersonKopia(CustomerLoginName, UserLoginName, Password, Language, CallerPersonNumber, CallerFirstName, CallerLastName, CallerOrganizationNumber, CallerCompanyName, CallerAddress, CallerZipCode, CallerCity, PackageName, PersonNumber);
        }
        
        public TestBusinessCheck.BC.DataImport2Result DataImport2Company(string CustomerLoginName, string UserLoginName, string Password, string Language, string PackageName, string OrganizationNumber) {
            return base.Channel.DataImport2Company(CustomerLoginName, UserLoginName, Password, Language, PackageName, OrganizationNumber);
        }
        
        public TestBusinessCheck.BC.DataImport2Result DataImport2CompanyKopiaInfo(string CustomerLoginName, string UserLoginName, string Password, string Language, string PackageName, string OrganizationNumber, string CustomerPopularName, string CustomerClientName, string OmfragadEmail, string OmfragadMobileNumber) {
            return base.Channel.DataImport2CompanyKopiaInfo(CustomerLoginName, UserLoginName, Password, Language, PackageName, OrganizationNumber, CustomerPopularName, CustomerClientName, OmfragadEmail, OmfragadMobileNumber);
        }
        
        public TestBusinessCheck.BC.DataImport2Result DataImport2CompanyBroker(string CustomerLoginName, string UserLoginName, string Password, string Language, string CallerPersonNumber, string CallerFirstName, string CallerLastName, string CallerOrganizationNumber, string CallerCompanyName, string CallerAddress, string CallerZipCode, string CallerCity, string PackageName, string OrganizationNumber) {
            return base.Channel.DataImport2CompanyBroker(CustomerLoginName, UserLoginName, Password, Language, CallerPersonNumber, CallerFirstName, CallerLastName, CallerOrganizationNumber, CallerCompanyName, CallerAddress, CallerZipCode, CallerCity, PackageName, OrganizationNumber);
        }
        
        public TestBusinessCheck.BC.DataImport2Result DataImport2CompanyBrokerKopiaInfo(
                    string CustomerLoginName, 
                    string UserLoginName, 
                    string Password, 
                    string Language, 
                    string CallerPersonNumber, 
                    string CallerFirstName, 
                    string CallerLastName, 
                    string CallerOrganizationNumber, 
                    string CallerCompanyName, 
                    string CallerAddress, 
                    string CallerZipCode, 
                    string CallerCity, 
                    string PackageName, 
                    string OrganizationNumber, 
                    string CustomerPopularName, 
                    string CustomerClientName, 
                    string OmfragadEmail, 
                    string OmfragadMobileNumber) {
            return base.Channel.DataImport2CompanyBrokerKopiaInfo(CustomerLoginName, UserLoginName, Password, Language, CallerPersonNumber, CallerFirstName, CallerLastName, CallerOrganizationNumber, CallerCompanyName, CallerAddress, CallerZipCode, CallerCity, PackageName, OrganizationNumber, CustomerPopularName, CustomerClientName, OmfragadEmail, OmfragadMobileNumber);
        }
        
        public TestBusinessCheck.BC.DataImport2Result DataImport2CompanyKopia(string CustomerLoginName, string UserLoginName, string Password, string Language, string CallerPersonNumber, string CallerFirstName, string CallerLastName, string CallerOrganizationNumber, string CallerCompanyName, string CallerAddress, string CallerZipCode, string CallerCity, string PackageName, string OrganizationNumber) {
            return base.Channel.DataImport2CompanyKopia(CustomerLoginName, UserLoginName, Password, Language, CallerPersonNumber, CallerFirstName, CallerLastName, CallerOrganizationNumber, CallerCompanyName, CallerAddress, CallerZipCode, CallerCity, PackageName, OrganizationNumber);
        }
    }
}
